{
    "attribute": {
        "prefix": "attribute",
        "body": "{{ attribute($0) }}",
        "description": "The attribute function can be used to access a \"dynamic\" attribute of a variable",
        "example": ""
    },
    "constant": {
        "prefix": "constant",
        "body": "{{ constant('${constName}') }}",
        "description": "constant returns the constant value for a given string",
        "example": "{{ some_date|date(constant('DATE_W3C')) }}\n{{ constant('Namespace\\Classname::CONSTANT_NAME') }}"
    },
    "cycle": {
        "prefix": "cycle",
        "body": "{{ cycle(${array}, ${position}) }}",
        "description": "The cycle function cycles on an array of values",
        "example": ""
    },
    "date": {
        "prefix": "datef",
        "body": "{% set ${currentDate} = date($0) %}",
        "description": "Converts an argument to a date to allow date comparison",
        "example": "{% date() %}\n{% date('-2days') %}\n{% date('-2days', 'Europe/Paris') %}"
    },
    "dump": {
        "prefix": "dump",
        "body": [
            "<pre>",
            "\t{{ dump(${array}) }}",
            "</pre>"
        ],
        "description": "(function) dumps information about a template variable. This is mostly useful to debug a template that does not behave as expected by introspecting its variables",
        "example": ""
    },
    "include": {
        "prefix": "include function",
        "body": "{{ include('${templatePath}.html.twig') }}",
        "description": "(function) returns the rendered content of a template",
        "example": ""
    },
    "max": {
        "prefix": "max",
        "body": "{% set ${result} = max(${array}) %}",
        "description": "(function) returns the biggest value of a sequence or a set of values",
        "example": "{{ max(1, 3, 2) }}\n{# returns \"3\" #}\n\n{{ max({2: \"e\", 3: \"a\", 1: \"b\", 5: \"d\", 4: \"c\"}) }}\n{# returns \"e\" #}"
    },
    "min": {
        "prefix": "min",
        "body": "{% set ${result} = min(${array}) %}",
        "description": "(function) returns the lowest value of a sequence or a set of values",
        "example": "{{ min(1, 3, 2) }}\n{# returns \"1\" #}\n\n{{ min({2: \"e\", 3: \"a\", 1: \"b\", 5: \"d\", 4: \"c\"}) }}\n{# returns \"a\" #}"
    },
    "parent": {
        "prefix": "parent",
        "body": "{{ parent() }}",
        "description": "(function)  return the content of the block as defined in the base template",
        "example": "{% extends \"base.html\" %}\n\n{% block sidebar %}\n\t<h3>Table Of Contents</h3>\n\t...\n\t{{ parent() }}\n{% endblock %}"
    },
    "random": {
        "prefix": "random",
        "hover": "",
        "body": "{% set ${result} = random($0) %}",
        "description": "(function) returns a random value depending on the supplied parameter type",
        "example": "{{ random(['apple', 'orange', 'citrus']) }}\n{# example output: orange #}\n\n{{ random('ABC') }}\n{# example output: C #}\n\n{{ random() }}\n{# example output: 15386094 (works as the native PHP mt_rand function) #}\n\n{{ random(5) }}\n{# example output: 3 #}"
    },
    "range set": {
        "prefix": "range set",
        "body": "{% set ${result} = range(${low}, ${high}, ${step}) %}",
        "description": "(function) Returns an array of elements from low to high, inclusive",
        "example": "{% set result = range(0, 6, 2) %}\n{% dump(result) %}\n{# output: array(0, 2, 4, 6) #}"
    },
    "range": {
        "prefix": "range",
        "body": "range(${low}, ${high}, ${step})",
        "description": "(function) Returns an array of elements from low to high, inclusive",
        "example": "{% set result = range(0, 6, 2) %}\n{% dump(result) %}\n{# output: array(0, 2, 4, 6) #}"
    },
    "source": {
        "prefix": "source",
        "body": "{{ source('${templateName}.html.twig') }}",
        "description": "(function) returns the content of a template without rendering it",
        "example": ""
    },
    "template_from_string": {
        "prefix": "template_from_string",
        "body": "{{ include(template_from_string(\"$0\")) }}",
        "description": "(function) loads a template from a string",
        "example": "{{ include(template_from_string(\"Hello {{ name }}\")) }}"
    },
    "twig path": {
        "body": [
            "{{ path('$0') }}"
        ],
        "prefix": "path",
        "description": "use this snippet to get the function path from symfoy"
    },
    "twig encore entry link tags": {
        "body": [
            "{{ encore_entry_link_tags('${app}') }}"
        ],
        "prefix": "encoreCss",
        "description": "encore_entry_link_tags for loading the css assets"
    },
    "twig encore entry script tags": {
        "body": [
            "{{ encore_entry_script_tags('${app}') }}"
        ],
        "prefix": "encorejs",
        "description": "encore_entry_script_tags to load the js from encore packge"
    },
    "twig form display": {
        "body": [
            "{{ form_start(form) }}\r",
            "{{ form_widget(form) }}\r",
            "<button type=\"submit\" class=\"${classes}\">${submit}</button> \r",
            "{{ form_end(form) }}"
        ],
        "prefix": "formTwig",
        "description": "use this snippet to generate the form display in twig via symfony"
    },
    "assets function": {
        "body": [
            "{{ asset('$0') }}"
        ],
        "prefix": "asset",
        "description": ""
    },
    "form twig start": {
        "body": "{{ form_start(form) }}",
        "prefix": "formStart",
        "description": "snippet to generate form start "
    },
    "form widget": {
        "body": "{{ form_widget(form) }}",
        "prefix": "formWidget",
        "description": "snippet to genarete form widget"
    },
    "twig form end": {
        "body": [
            "{{ form_end(form) }}"
        ],
        "prefix": "formEnd",
        "description": "snippet to genarete form end twig"
    },
    "function twig render": {
        "body": [
            "{{ render(${uri}, {${options}}) }}"
        ],
        "prefix": "render",
        "description": [
            "Makes a request to the given internal URI or controller and returns the result.\r",
            "The render strategy can be specified in the strategy key of the options\r"
        ]
    },
    "function twig controller": {
        "body": "{{ controller(${controller}, {${attributes}}, {${query}}) }}",
        "prefix": "controller",
        "description": "Returns an instance of ControllerReference to be used with functions like render()"
    },
    "twig csrf_token": {
        "body": [
            "{{ csrf_token(${intention}) }}"
        ],
        "prefix": "csrf",
        "description": "Renders a CSRF token. Use this function if you want CSRF protection in a regular HTML form not managed by the Symfony Form component."
    },
    "twig is_granted": {
        "body": [
            "{% if is_granted('${ROLE_ADMIN}',${object},${field}) %}\r",
            "\r",
            "{% endif %}"
        ],
        "prefix": "isGranted",
        "description": [
            "Returns true if the current user has the given role.",
            " If several roles are passed in an array, true is returned if the user has at least one of them."
        ]
    },
    "twig url": {
        "body": [
            "{{ url(${route_name},{${options}}) }}"
        ],
        "prefix": "url",
        "description": "Returns the absolute URL (with scheme and host) for the given route. If schemeRelative is enabled, it'll create a scheme-relative URL."
    },
    "twig form errors": {
        "body": [
            "{{ form_errors(form) }}"
        ],
        "prefix": "formErrors",
        "description": "Renders the HTML widget of a given field. If you apply this to an entire form or collection of fields, each underlying form row will be rendered."
    },
    "twig  form row": {
        "body": [
            "{{ form_row(form.name) }}"
        ],
        "prefix": "formRow",
        "description": "The second argument to form_row() is an array of variables. The templates provided in Symfony only allow to override the label "
    },
    "twig form rest": {
        "body": [
            "{{ form_rest(form) }}"
        ],
        "prefix": "formRest",
        "description": "This renders all fields that have not yet been rendered for the given form. It's a good idea to always have this somewhere inside your form as it'll render hidden fields for you and make any fields you forgot to render easier to spot (since it'll render the field for you)."
    },
    "twig function form_theme": {
        "body": [
            "{% form_theme form ${resources} %}"
        ],
        "prefix": "formTheme",
        "description": "Sets the resources to override the form theme for the given form view instance. You can use _self as resources to set it to the current resource."
    },
    "twig function absoulute_url": {
        "body": [
            "{{ absolute_url(${path}) }}"
        ],
        "prefix": "absolute_url",
        "description": "Returns the absolute URL (with scheme and host) from the passed relative path. Combine it with the asset() function to generate absolute URLs for web assets"
    },
    "twig function relative_path": {
        "body": [
            "{{ relative_path(${path}) }}"
        ],
        "prefix": "relative_path",
        "description": "Returns the relative path from the passed absolute URL. For example, assume you're on the following page in your app: http://example.com/products/hover-board."
    }
}
